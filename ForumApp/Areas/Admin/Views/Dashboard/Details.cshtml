@using ForumApp.Web.ViewModels.Admin.Board
@model BoardDetailsAdminViewModel

@{
	ViewData["Title"] = "Board Admin Details";
}

<div class="container py-4">
	<div class="d-flex justify-content-between align-items-center mb-3">
		<h2 class="mb-0">
			<i class="fas fa-shield-alt me-2"></i>@Model.Name
		</h2>
		<a asp-area="Admin" asp-controller="Dashboard" asp-action="Index" class="btn btn-outline-secondary">
			<i class="fas fa-arrow-left me-1"></i>Back to All Boards
		</a>
	</div>

	<div class="mb-3 text-muted">
		<strong>Created:</strong> @Model.CreatedAt
	</div>

	@if (!string.IsNullOrWhiteSpace(Model.ImageUrl))
	{
		<div class="mb-4">
			<img src="@Model.ImageUrl" alt="Board image" class="img-fluid rounded shadow-sm" style="max-height: 250px; object-fit: contain;" />
		</div>
	}

	<div class="mb-4">
		<h5>Description</h5>
		<p>@Model.Description</p>
	</div>

	@if (Model.Categories?.Any() == true)
	{
		<div class="mb-4">
			<h5>Categories</h5>
			@foreach (var category in Model.Categories)
			{
				<span class="badge me-1"
					  style="background-color: @category.ColorHex; color: @(category.ColorHex.ToLower() == "#ffffff" ? "#000" : "#fff");">
					@category.Name
				</span>
			}
		</div>
	}

	<div class="mb-4">
		<h5>Moderators</h5>

		@if (Model.Moderators?.Any() == true)
		{
			<ul class="list-group">
				@foreach (var mod in Model.Moderators)
				{
					<li class="list-group-item d-flex justify-content-between align-items-center">
						<div>
							<strong>@mod.DisplayName</strong>
							<span class="text-muted">(@mod.Handle)</span>
						</div>
						<form asp-area="Admin" asp-controller="Dashboard" asp-action="RemoveModerator" method="post" class="d-inline">
							<input type="hidden" name="boardId" value="@Model.Id" />
							<input type="hidden" name="userId" value="@mod.Id" />
							<button type="submit" class="btn btn-sm btn-outline-danger">
								<i class="fas fa-user-minus me-1"></i>Remove
							</button>
						</form>
					</li>
				}
			</ul>
		}
		else
		{
			<div class="alert alert-info">No moderators yet.</div>
		}

		<div class="mt-3">
			<form asp-area="Admin" asp-controller="Dashboard" asp-action="SearchUsers" method="get" class="d-flex gap-2">
				<input type="hidden" name="boardId" value="@Model.Id" />
				<input type="text" name="handle" class="form-control" placeholder="Search by @@handle..." />
				<button type="submit" class="btn btn-outline-primary">
					<i class="fas fa-search me-1"></i>Search
				</button>
			</form>
		</div>
		@if (Model.SearchPerformed)
		{
			if (Model.SearchResults != null && Model.SearchResults.Any())
			{
				<div class="mt-4">
					<h5>Search Results</h5>
					<ul class="list-group">
						@foreach (var user in Model.SearchResults)
						{
							<li class="list-group-item d-flex justify-content-between align-items-center">
								<div>
									<strong>@user.DisplayName</strong>
									<span class="text-muted">(@user.UserName)</span>
								</div>
								@if (user.IsModerator)
								{
									<form asp-area="Admin" asp-controller="Dashboard" asp-action="RemoveModerator" method="post" class="d-inline">
										<input type="hidden" name="boardId" value="@Model.Id" />
										<input type="hidden" name="userId" value="@user.Id" />
										<button type="submit" class="btn btn-sm btn-outline-danger">
											<i class="fas fa-user-minus me-1"></i>Remove
										</button>
									</form>
								}
								else
								{
									<form asp-area="Admin" asp-controller="Dashboard" asp-action="AddModerator" method="post" class="d-inline">
										<input type="hidden" name="boardId" value="@Model.Id" />
										<input type="hidden" name="userId" value="@user.Id" />
										<button type="submit" class="btn btn-sm btn-outline-success">
											<i class="fas fa-user-plus me-1"></i>Add
										</button>
									</form>
								}
							</li>
						}
					</ul>
				</div>
			}
			else
			{
				<div class="alert alert-warning mt-3">
					No users found matching your search.
				</div>
			}
		}
	</div>

	<div class="mb-4">
		<h5>Posts</h5>

		@if (Model.Posts?.Any() == true)
		{
			<ul class="list-group">
				@foreach (var post in Model.Posts)
				{
					<li class="list-group-item">
						<strong>@post.Title</strong> —
						<span class="text-muted">by @post.Author (@post.Handle)</span><br />
						<small class="text-muted">Posted: @post.CreatedAt</small>
					</li>
				}
			</ul>
		}
		else
		{
			<div class="alert alert-secondary">No posts in this board yet.</div>
		}
	</div>
</div>
